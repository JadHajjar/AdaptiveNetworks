start/end flags:
    lane Start/End Flags :
        - it takes into consideration segment.invert, lane.direction, and LHT. i.e. segment.invert ^ lane.finalDirdection
        - taking lane.direction is usually not useful because medians are non-directional and pavements are bi-directional.
        - my lane segment end start/end flags work in the exact same way (LHT only applicable to directional nodes)
    Segment YieldStart/YieldEnd flags:
        - means actual start and end node
        - currently my segment's node/segmentEnd flags also mean actual start/end node.
    Lane YieldStart/YieldEnd flags:
        - it takes into account invert flag
        - then forward lane removes YieldStart, and backward lane removes YieldEnd
            - this usually is of no help because medians are non-directional and pavements are bi-directional.
            - this also on a backward lane cars can go toward YieldStart

- prop requirements:
    - no short/far turns (vanilla)
    - stop (vanilla)
    - give way (UK/ITA)
    - pedestrian crossing (ITA)
    - no u-turn (UK/Elly)
    - parking (UK)
    - no parking (vanilla)

smooth bezier:
    if smooth => dir *.3
    else => dir *.15
    - segment is smooth at middle nodes 
    - beziers are also smooth on transitions.